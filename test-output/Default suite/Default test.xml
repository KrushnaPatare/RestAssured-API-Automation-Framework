<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="9" hostname="DESKTOP-47P2MTB" failures="1" tests="3" name="Default test" time="12.898" errors="0" timestamp="2024-10-21T13:43:10 IST">
  <testcase classname="api.test.PetTest" name="testAddNewPetPostResponse" time="4.665"/>
  <testcase classname="api.test.PetTest" name="testAddNewPetPostResponse" time="1.453"/>
  <testcase classname="api.test.PetTest" name="testAddNewPetPostResponse" time="3.998">
    <failure type="java.lang.AssertionError" message="Response time is outside the expected range (200-3000ms). expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: Response time is outside the expected range (200-3000ms). expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at api.test.PetTest.testAddNewPetPostResponse(PetTest.java:89)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- testAddNewPetPostResponse -->
  <testcase classname="api.test.PetTest" name="deleberatlySkippedTest2" time="0.0">
    <ignored/>
  </testcase> <!-- deleberatlySkippedTest2 -->
  <testcase classname="api.test.PetTest" name="testUpdatePetPostResponse" time="0.0">
    <ignored/>
  </testcase> <!-- testUpdatePetPostResponse -->
  <testcase classname="api.test.PetTest" name="deleberatlySkippedTest1" time="0.0">
    <ignored/>
  </testcase> <!-- deleberatlySkippedTest1 -->
  <testcase classname="api.test.PetTest" name="testFindPetByPetIDGetResponse" time="0.0">
    <ignored/>
  </testcase> <!-- testFindPetByPetIDGetResponse -->
  <testcase classname="api.test.PetTest" name="deleberatlyFailTest" time="0.0">
    <ignored/>
  </testcase> <!-- deleberatlyFailTest -->
  <testcase classname="api.test.PetTest" name="testDeletePetDeleteResponse" time="0.0">
    <ignored/>
  </testcase> <!-- testDeletePetDeleteResponse -->
  <testcase classname="api.test.PetTest" name="testFindPetByStatusGetResponse" time="0.0">
    <ignored/>
  </testcase> <!-- testFindPetByStatusGetResponse -->
  <testcase classname="api.test.PetTest" name="testUploadPetImagePostResponse" time="0.0">
    <ignored/>
  </testcase> <!-- testUploadPetImagePostResponse -->
  <testcase classname="api.test.PetTest" name="testUpdateExistingPetPutResponse" time="0.0">
    <ignored/>
  </testcase> <!-- testUpdateExistingPetPutResponse -->
</testsuite> <!-- Default test -->
