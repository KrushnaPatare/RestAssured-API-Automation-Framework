<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="57" passed="49" failed="6" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-23T17:57:45 IST" name="Surefire suite" finished-at="2024-10-23T17:58:59 IST" duration-ms="74050">
    <groups>
      <group name="Regression">
        <method signature="PetTest.testAddNewPetPostResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:api.test.PetTest@27eedb64]" name="testAddNewPetPostResponse" class="api.test.PetTest"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2024-10-23T17:57:45 IST" name="Surefire test" finished-at="2024-10-23T17:58:59 IST" duration-ms="74050">
      <class name="api.test.PetTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:57:46 IST" name="setUp" finished-at="2024-10-23T17:57:46 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddNewPetPostResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:57:49 IST" name="testAddNewPetPostResponse" description="This test verifies the Add New Pet POST response and validates the data" data-provider="PetData" finished-at="2024-10-23T17:57:55 IST" duration-ms="6185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bird]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sona]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Red]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[available]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewPetPostResponse -->
        <test-method signature="testAddNewPetPostResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:57:55 IST" name="testAddNewPetPostResponse" description="This test verifies the Add New Pet POST response and validates the data" data-provider="PetData" finished-at="2024-10-23T17:57:57 IST" duration-ms="1399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Animal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Lucky]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Black]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[pending]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewPetPostResponse -->
        <test-method signature="testAddNewPetPostResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:57:57 IST" name="testAddNewPetPostResponse" description="This test verifies the Add New Pet POST response and validates the data" data-provider="PetData" finished-at="2024-10-23T17:57:58 IST" duration-ms="1474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Fish]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Goldy]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Golden]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[sold]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewPetPostResponse -->
        <test-method signature="testUpdateExistingPetPutResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:57:59 IST" name="testUpdateExistingPetPutResponse" description="This test verifies the Update Existing Pet PUT response and validates the updated data" data-provider="UpdatedPetData" finished-at="2024-10-23T17:58:01 IST" duration-ms="1434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bird555]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sona]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Red]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[available]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateExistingPetPutResponse -->
        <test-method signature="testUpdateExistingPetPutResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:58:01 IST" name="testUpdateExistingPetPutResponse" description="This test verifies the Update Existing Pet PUT response and validates the updated data" data-provider="UpdatedPetData" finished-at="2024-10-23T17:58:02 IST" duration-ms="1401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Animal555]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Lucky]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Black]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[pending]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateExistingPetPutResponse -->
        <test-method signature="testUpdateExistingPetPutResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:58:02 IST" name="testUpdateExistingPetPutResponse" description="This test verifies the Update Existing Pet PUT response and validates the updated data" data-provider="UpdatedPetData" finished-at="2024-10-23T17:58:04 IST" duration-ms="1397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Fish555]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Goldy]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Golden]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[sold]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateExistingPetPutResponse -->
        <test-method signature="testFindPetByStatusGetResponse()[pri:3, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:58:04 IST" name="testFindPetByStatusGetResponse" description="This test verifies the Get Pet by Status response and checks for the presence of pet with name &#039;Lucky&#039; and status &#039;pending&#039;" finished-at="2024-10-23T17:58:05 IST" duration-ms="1446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetByStatusGetResponse -->
        <test-method signature="testFindPetByPetIDGetResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:58:06 IST" name="testFindPetByPetIDGetResponse" description="This test verifies the GET response for finding a pet by its ID." data-provider="PetData" finished-at="2024-10-23T17:58:09 IST" duration-ms="2857" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bird]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sona]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Red]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[available]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetByPetIDGetResponse -->
        <test-method signature="testFindPetByPetIDGetResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:58:09 IST" name="testFindPetByPetIDGetResponse" description="This test verifies the GET response for finding a pet by its ID." data-provider="PetData" finished-at="2024-10-23T17:58:10 IST" duration-ms="1465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Animal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Lucky]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Black]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[pending]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetByPetIDGetResponse -->
        <test-method signature="testFindPetByPetIDGetResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:58:10 IST" name="testFindPetByPetIDGetResponse" description="This test verifies the GET response for finding a pet by its ID." data-provider="PetData" finished-at="2024-10-23T17:58:12 IST" duration-ms="1381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Fish]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Goldy]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Golden]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[sold]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetByPetIDGetResponse -->
        <test-method signature="testUpdatePetPostResponse()[pri:6, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:58:12 IST" name="testUpdatePetPostResponse" description="This test verifies the POST response for updating an existing pet." finished-at="2024-10-23T17:58:15 IST" duration-ms="2957" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePetPostResponse -->
        <test-method signature="testUploadPetImagePostResponse()[pri:7, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:58:15 IST" name="testUploadPetImagePostResponse" description="This test verifies the POST response for uploading an image for an existing pet." finished-at="2024-10-23T17:58:33 IST" duration-ms="18458" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at api.test.PetTest.testUploadPetImagePostResponse(PetTest.java:534)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUploadPetImagePostResponse -->
        <test-method signature="testDeletePetDeleteResponse()[pri:8, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:58:33 IST" name="testDeletePetDeleteResponse" description="This test verifies the DELETE response for removing a pet and checks the status after deletion." finished-at="2024-10-23T17:58:36 IST" duration-ms="2955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletePetDeleteResponse -->
        <test-method signature="deleberatlyFailTest()[pri:9, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:58:36 IST" name="deleberatlyFailTest" finished-at="2024-10-23T17:58:36 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at api.test.PetTest.deleberatlyFailTest(PetTest.java:625)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleberatlyFailTest -->
        <test-method signature="deleberatlySkippedTest1()[pri:10, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:58:36 IST" name="deleberatlySkippedTest1" finished-at="2024-10-23T17:58:36 IST" depends-on-methods="api.test.PetTest.deleberatlyFailTest" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method api.test.PetTest.deleberatlySkippedTest1() on instance api.test.PetTest@27eedb64 depends on not successfully finished methods 
[api.test.PetTest.deleberatlyFailTest() on instance api.test.PetTest@27eedb64]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method api.test.PetTest.deleberatlySkippedTest1() on instance api.test.PetTest@27eedb64 depends on not successfully finished methods 
[api.test.PetTest.deleberatlyFailTest() on instance api.test.PetTest@27eedb64]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:156)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleberatlySkippedTest1 -->
        <test-method signature="deleberatlySkippedTest2()[pri:11, instance:api.test.PetTest@27eedb64]" started-at="2024-10-23T17:58:36 IST" name="deleberatlySkippedTest2" finished-at="2024-10-23T17:58:36 IST" depends-on-methods="api.test.PetTest.deleberatlyFailTest" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method api.test.PetTest.deleberatlySkippedTest2() on instance api.test.PetTest@27eedb64 depends on not successfully finished methods 
[api.test.PetTest.deleberatlyFailTest() on instance api.test.PetTest@27eedb64]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method api.test.PetTest.deleberatlySkippedTest2() on instance api.test.PetTest@27eedb64 depends on not successfully finished methods 
[api.test.PetTest.deleberatlyFailTest() on instance api.test.PetTest@27eedb64]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:156)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleberatlySkippedTest2 -->
      </class> <!-- api.test.PetTest -->
      <class name="api.test.UserTest">
        <test-method is-config="true" signature="setUpData()[pri:0, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:45 IST" name="setUpData" finished-at="2024-10-23T17:58:46 IST" duration-ms="398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpData -->
        <test-method signature="createUser_shouldReturn200StatusCode()[pri:1, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:46 IST" name="createUser_shouldReturn200StatusCode" description="This test verifies the Create User POST response status code" finished-at="2024-10-23T17:58:47 IST" duration-ms="1449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser_shouldReturn200StatusCode -->
        <test-method signature="createUser_shouldRespondWithinExpectedTime()[pri:2, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:47 IST" name="createUser_shouldRespondWithinExpectedTime" description="This test verifies the Create User response time" finished-at="2024-10-23T17:58:47 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser_shouldRespondWithinExpectedTime -->
        <test-method signature="createUser_shouldReturnCorrectContentTypeHeader()[pri:3, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:47 IST" name="createUser_shouldReturnCorrectContentTypeHeader" description="This test verifies the Content-Type header of the Create User response" finished-at="2024-10-23T17:58:47 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser_shouldReturnCorrectContentTypeHeader -->
        <test-method signature="createUser_shouldReturnValidResponseFieldTypes()[pri:4, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:47 IST" name="createUser_shouldReturnValidResponseFieldTypes" description="This test verifies the field types of the Create User response" finished-at="2024-10-23T17:58:47 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser_shouldReturnValidResponseFieldTypes -->
        <test-method signature="createUser_shouldReturnCorrectFieldValues()[pri:5, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:47 IST" name="createUser_shouldReturnCorrectFieldValues" description="This test verifies the field values of the Create User response" finished-at="2024-10-23T17:58:47 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser_shouldReturnCorrectFieldValues -->
        <test-method signature="createUser_shouldMatchJsonSchema()[pri:6, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:47 IST" name="createUser_shouldMatchJsonSchema" description="This test validates the Create User response against a JSON schema" finished-at="2024-10-23T17:58:47 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser_shouldMatchJsonSchema -->
        <test-method signature="getUser_shouldReturn200StatusCode()[pri:7, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:47 IST" name="getUser_shouldReturn200StatusCode" description="This test verifies that GET user returns 200 status code" finished-at="2024-10-23T17:58:49 IST" duration-ms="1352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUser_shouldReturn200StatusCode -->
        <test-method signature="getUser_shouldRespondWithinExpectedTime()[pri:8, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:49 IST" name="getUser_shouldRespondWithinExpectedTime" description="This test verifies that GET user response time is within the expected range" finished-at="2024-10-23T17:58:49 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUser_shouldRespondWithinExpectedTime -->
        <test-method signature="getUser_shouldReturnCorrectContentTypeHeader()[pri:9, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:49 IST" name="getUser_shouldReturnCorrectContentTypeHeader" description="This test verifies that the GET user response contains the correct Content-Type header" finished-at="2024-10-23T17:58:49 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUser_shouldReturnCorrectContentTypeHeader -->
        <test-method signature="getUser_shouldReturnValidResponseFieldTypes()[pri:10, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:49 IST" name="getUser_shouldReturnValidResponseFieldTypes" description="This test verifies that the GET user response has valid field types" finished-at="2024-10-23T17:58:49 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUser_shouldReturnValidResponseFieldTypes -->
        <test-method signature="getUser_shouldReturnCorrectFieldValues()[pri:11, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:49 IST" name="getUser_shouldReturnCorrectFieldValues" description="This test verifies that the GET user response contains correct field values" finished-at="2024-10-23T17:58:49 IST" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUser_shouldReturnCorrectFieldValues -->
        <test-method signature="updateUser_shouldReturn200StatusCode()[pri:13, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:49 IST" name="updateUser_shouldReturn200StatusCode" description="This test verifies the successful update of a user and returns 200 status code" finished-at="2024-10-23T17:58:51 IST" duration-ms="1469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser_shouldReturn200StatusCode -->
        <test-method signature="updateUser_shouldRespondWithinExpectedTime()[pri:14, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:51 IST" name="updateUser_shouldRespondWithinExpectedTime" description="This test verifies that the update user request responds within the expected time frame" finished-at="2024-10-23T17:58:51 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser_shouldRespondWithinExpectedTime -->
        <test-method signature="updateUser_shouldReturnCorrectContentTypeHeader()[pri:15, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:51 IST" name="updateUser_shouldReturnCorrectContentTypeHeader" description="This test verifies the Content-Type header in the update user response" finished-at="2024-10-23T17:58:51 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser_shouldReturnCorrectContentTypeHeader -->
        <test-method signature="updateUser_shouldReturnValidResponseFieldTypes()[pri:16, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:51 IST" name="updateUser_shouldReturnValidResponseFieldTypes" description="This test verifies the types of fields in the update user response" finished-at="2024-10-23T17:58:51 IST" duration-ms="2" status="FAIL">
          <exception class="org.json.JSONException">
            <message>
              <![CDATA[JSONObject["id"] not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.json.JSONException: JSONObject["id"] not found.
at org.json.JSONObject.get(JSONObject.java:570)
at api.test.UserTest.updateUser_shouldReturnValidResponseFieldTypes(UserTest.java:619)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.json.JSONException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser_shouldReturnValidResponseFieldTypes -->
        <test-method signature="updateUser_shouldReturnCorrectFieldValues()[pri:17, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:51 IST" name="updateUser_shouldReturnCorrectFieldValues" description="This test verifies that the field values returned in the update user response are correct" finished-at="2024-10-23T17:58:51 IST" duration-ms="78" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "java.lang.Integer.intValue()" because the return value of "io.restassured.response.ExtractableResponse.path(String, String[])" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "io.restassured.response.ExtractableResponse.path(String, String[])" is null
at api.test.UserTest.updateUser_shouldReturnCorrectFieldValues(UserTest.java:658)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser_shouldReturnCorrectFieldValues -->
        <test-method signature="updateUser_shouldMatchJsonSchema()[pri:18, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:51 IST" name="updateUser_shouldMatchJsonSchema" description="This test verifies that the update user response matches the expected JSON schema" finished-at="2024-10-23T17:58:51 IST" duration-ms="24" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: object instance has properties which are not allowed by the schema: ["code","message","type"]
    level: "error"
    schema: {"loadingURI":"#","pointer":"/definitions/Welcome2"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "additionalProperties"
    unwanted: ["code","message","type"]
error: object has missing required properties (["email","firstName","id","lastName","password","phone","userStatus","username"])
    level: "error"
    schema: {"loadingURI":"#","pointer":"/definitions/Welcome2"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "required"
    required: ["email","firstName","id","lastName","password","phone","userStatus","username"]
    missing: ["email","firstName","id","lastName","password","phone","userStatus","username"]

  Actual: {"code":200,"type":"unknown","message":"1583772475"}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: object instance has properties which are not allowed by the schema: ["code","message","type"]
    level: "error"
    schema: {"loadingURI":"#","pointer":"/definitions/Welcome2"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "additionalProperties"
    unwanted: ["code","message","type"]
error: object has missing required properties (["email","firstName","id","lastName","password","phone","userStatus","username"])
    level: "error"
    schema: {"loadingURI":"#","pointer":"/definitions/Welcome2"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "required"
    required: ["email","firstName","id","lastName","password","phone","userStatus","username"]
    missing: ["email","firstName","id","lastName","password","phone","userStatus","username"]

  Actual: {"code":200,"type":"unknown","message":"1583772475"}

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:107)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)
at api.test.UserTest.updateUser_shouldMatchJsonSchema(UserTest.java:697)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser_shouldMatchJsonSchema -->
        <test-method signature="updateUser_withInvalidUsername_shouldHandleGracefully()[pri:19, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:51 IST" name="updateUser_withInvalidUsername_shouldHandleGracefully" description="This test verifies how the system handles an update request with an invalid username" finished-at="2024-10-23T17:58:52 IST" duration-ms="1414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser_withInvalidUsername_shouldHandleGracefully -->
        <test-method signature="loginUser_shouldReturn200StatusCode()[pri:20, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:52 IST" name="loginUser_shouldReturn200StatusCode" description="This test verifies that logging in a user returns a 200 status code" finished-at="2024-10-23T17:58:53 IST" duration-ms="1382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUser_shouldReturn200StatusCode -->
        <test-method signature="loginUser_shouldRespondWithinExpectedTime()[pri:21, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:53 IST" name="loginUser_shouldRespondWithinExpectedTime" description="This test verifies that login user response is within the expected time range" finished-at="2024-10-23T17:58:53 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUser_shouldRespondWithinExpectedTime -->
        <test-method signature="loginUser_shouldReturnCorrectContentTypeHeader()[pri:22, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:53 IST" name="loginUser_shouldReturnCorrectContentTypeHeader" description="This test verifies that the login response has the correct Content-Type header" finished-at="2024-10-23T17:58:53 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUser_shouldReturnCorrectContentTypeHeader -->
        <test-method signature="loginUser_shouldReturnValidResponseFieldTypes()[pri:23, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:53 IST" name="loginUser_shouldReturnValidResponseFieldTypes" description="This test verifies that the login response fields have the correct types" finished-at="2024-10-23T17:58:53 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUser_shouldReturnValidResponseFieldTypes -->
        <test-method signature="loginUser_shouldReturnCorrectFieldValues()[pri:24, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:54 IST" name="loginUser_shouldReturnCorrectFieldValues" description="This test verifies that the login response fields contain the correct values" finished-at="2024-10-23T17:58:54 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUser_shouldReturnCorrectFieldValues -->
        <test-method signature="loginUser_shouldMatchJsonSchema()[pri:25, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:54 IST" name="loginUser_shouldMatchJsonSchema" description="This test validates the login response against a predefined JSON schema" finished-at="2024-10-23T17:58:54 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUser_shouldMatchJsonSchema -->
        <test-method signature="logoutUser_shouldReturn200StatusCode()[pri:26, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:54 IST" name="logoutUser_shouldReturn200StatusCode" description="This test verifies that the logout response returns a 200 status code" finished-at="2024-10-23T17:58:55 IST" duration-ms="1377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutUser_shouldReturn200StatusCode -->
        <test-method signature="logoutUser_shouldRespondWithinExpectedTime()[pri:27, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:55 IST" name="logoutUser_shouldRespondWithinExpectedTime" description="This test verifies the response time for user logout" finished-at="2024-10-23T17:58:55 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutUser_shouldRespondWithinExpectedTime -->
        <test-method signature="logoutUser_shouldReturnCorrectContentTypeHeader()[pri:28, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:55 IST" name="logoutUser_shouldReturnCorrectContentTypeHeader" description="This test verifies the content type of the logout response" finished-at="2024-10-23T17:58:55 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutUser_shouldReturnCorrectContentTypeHeader -->
        <test-method signature="logoutUser_shouldReturnValidResponseFieldTypes()[pri:29, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:55 IST" name="logoutUser_shouldReturnValidResponseFieldTypes" description="This test verifies the field types in the logout response" finished-at="2024-10-23T17:58:55 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutUser_shouldReturnValidResponseFieldTypes -->
        <test-method signature="logoutUser_shouldReturnCorrectFieldValues()[pri:30, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:55 IST" name="logoutUser_shouldReturnCorrectFieldValues" description="This test verifies the field values in the logout response" finished-at="2024-10-23T17:58:55 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutUser_shouldReturnCorrectFieldValues -->
        <test-method signature="logoutUser_shouldMatchJsonSchema()[pri:31, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:55 IST" name="logoutUser_shouldMatchJsonSchema" description="This test verifies the logout response against a JSON schema" finished-at="2024-10-23T17:58:55 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutUser_shouldMatchJsonSchema -->
        <test-method signature="deleteUser_shouldReturn200StatusCode()[pri:32, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:55 IST" name="deleteUser_shouldReturn200StatusCode" description="This test verifies that the DELETE request for a user returns a 200 status code" finished-at="2024-10-23T17:58:56 IST" duration-ms="1377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser_shouldReturn200StatusCode -->
        <test-method signature="deleteUser_shouldRespondWithinExpectedTime()[pri:33, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:56 IST" name="deleteUser_shouldRespondWithinExpectedTime" description="This test verifies that the DELETE request response is within the expected time" finished-at="2024-10-23T17:58:56 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser_shouldRespondWithinExpectedTime -->
        <test-method signature="deleteUser_shouldReturnValidResponseFieldTypes()[pri:34, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:56 IST" name="deleteUser_shouldReturnValidResponseFieldTypes" description="This test verifies the field types in the DELETE request response" finished-at="2024-10-23T17:58:56 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser_shouldReturnValidResponseFieldTypes -->
        <test-method signature="deleteUser_shouldReturnCorrectFieldValues()[pri:35, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:56 IST" name="deleteUser_shouldReturnCorrectFieldValues" description="This test verifies the field values in the DELETE request response" finished-at="2024-10-23T17:58:56 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser_shouldReturnCorrectFieldValues -->
        <test-method signature="deleteUser_shouldMatchJsonSchema()[pri:36, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:56 IST" name="deleteUser_shouldMatchJsonSchema" description="This test verifies the DELETE request response matches the expected JSON schema" finished-at="2024-10-23T17:58:57 IST" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser_shouldMatchJsonSchema -->
        <test-method signature="deletedUser_shouldNotBeFetched_shouldReturn404Error()[pri:37, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:57 IST" name="deletedUser_shouldNotBeFetched_shouldReturn404Error" description="This test verifies that a deleted user cannot be fetched and returns a 404 error" finished-at="2024-10-23T17:58:58 IST" duration-ms="1361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletedUser_shouldNotBeFetched_shouldReturn404Error -->
        <test-method signature="createUsersInBulk_shouldReturn200StatusCode()[pri:38, instance:api.test.UserTest@1b84f475]" started-at="2024-10-23T17:58:58 IST" name="createUsersInBulk_shouldReturn200StatusCode" description="This test verifies that the bulk user creation returns a 200 status code" finished-at="2024-10-23T17:58:59 IST" duration-ms="1487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUsersInBulk_shouldReturn200StatusCode -->
      </class> <!-- api.test.UserTest -->
      <class name="api.test.StoreTest">
        <test-method is-config="true" signature="setUpData()[pri:0, instance:api.test.StoreTest@6bffbc6d]" started-at="2024-10-23T17:58:36 IST" name="setUpData" finished-at="2024-10-23T17:58:36 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpData -->
        <test-method signature="testPostStoreResponse()[pri:1, instance:api.test.StoreTest@6bffbc6d]" started-at="2024-10-23T17:58:36 IST" name="testPostStoreResponse" description="This test verifies the Post Store response for placing order of pet and validates the data" finished-at="2024-10-23T17:58:38 IST" duration-ms="1584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostStoreResponse -->
        <test-method signature="testGetStoreOrderResponse()[pri:2, instance:api.test.StoreTest@6bffbc6d]" started-at="2024-10-23T17:58:38 IST" name="testGetStoreOrderResponse" description="This test verifies the Get Store Order response for finding purchanse order by id and validates the data" finished-at="2024-10-23T17:58:41 IST" duration-ms="2893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStoreOrderResponse -->
        <test-method signature="testGetStoreInventoriesResponse()[pri:13, instance:api.test.StoreTest@6bffbc6d]" started-at="2024-10-23T17:58:41 IST" name="testGetStoreInventoriesResponse" description="This test verifies the Get Store Inventories response returned by statuswise and validates the data" finished-at="2024-10-23T17:58:42 IST" duration-ms="1647" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: object instance has properties which are not allowed by the schema: ["AVAILABLE","Available","none","pending","peric","{{PetStatus-Updated}}"]
    level: "error"
    schema: {"loadingURI":"#","pointer":"/definitions/Welcome8"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "additionalProperties"
    unwanted: ["AVAILABLE","Available","none","pending","peric","{{PetStatus-Updated}}"]
error: object has missing required properties (["placed","ratvelleg"])
    level: "error"
    schema: {"loadingURI":"#","pointer":"/definitions/Welcome8"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "required"
    required: ["available","placed","ratvelleg","sold","status","string"]
    missing: ["placed","ratvelleg"]

  Actual: {"AVAILABLE":2,"sold":2,"{{PetStatus-Updated}}":1,"string":529,"pending":7,"available":196,"Available":1,"none":1,"peric":2,"status":18}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: object instance has properties which are not allowed by the schema: ["AVAILABLE","Available","none","pending","peric","{{PetStatus-Updated}}"]
    level: "error"
    schema: {"loadingURI":"#","pointer":"/definitions/Welcome8"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "additionalProperties"
    unwanted: ["AVAILABLE","Available","none","pending","peric","{{PetStatus-Updated}}"]
error: object has missing required properties (["placed","ratvelleg"])
    level: "error"
    schema: {"loadingURI":"#","pointer":"/definitions/Welcome8"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "required"
    required: ["available","placed","ratvelleg","sold","status","string"]
    missing: ["placed","ratvelleg"]

  Actual: {"AVAILABLE":2,"sold":2,"{{PetStatus-Updated}}":1,"string":529,"pending":7,"available":196,"Available":1,"none":1,"peric":2,"status":18}

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:107)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)
at api.test.StoreTest.testGetStoreInventoriesResponse(StoreTest.java:293)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStoreInventoriesResponse -->
        <test-method signature="testDeleteStoreOrderResponse()[pri:19, instance:api.test.StoreTest@6bffbc6d]" started-at="2024-10-23T17:58:42 IST" name="testDeleteStoreOrderResponse" description="This test verifies the Delete Store Order DELETE response and validates the data" finished-at="2024-10-23T17:58:45 IST" duration-ms="2980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteStoreOrderResponse -->
      </class> <!-- api.test.StoreTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
