<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="29" passed="21" failed="6" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-06T10:41:50 IST" name="Surefire suite" finished-at="2024-12-06T10:42:46 IST" duration-ms="56223">
    <groups>
      <group name="Regression">
        <method signature="PetTest.testAddNewPetPostResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:api.test.PetTest@4c9f8c13]" name="testAddNewPetPostResponse" class="api.test.PetTest"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2024-12-06T10:41:50 IST" name="Surefire test" finished-at="2024-12-06T10:42:46 IST" duration-ms="56223">
      <class name="api.test.PetTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:41:50 IST" name="setUp" finished-at="2024-12-06T10:41:51 IST" duration-ms="669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:41:53 IST" name="globalSetUP" finished-at="2024-12-06T10:41:54 IST" duration-ms="817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testAddNewPetPostResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:41:54 IST" name="testAddNewPetPostResponse" description="This test verifies the Add New Pet POST response and validates the data" data-provider="PetData" finished-at="2024-12-06T10:41:58 IST" duration-ms="3967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bird]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sona]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Red]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[available]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewPetPostResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:41:58 IST" name="tearDown" finished-at="2024-12-06T10:41:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:41:58 IST" name="globalSetUP" finished-at="2024-12-06T10:41:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testAddNewPetPostResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:41:58 IST" name="testAddNewPetPostResponse" description="This test verifies the Add New Pet POST response and validates the data" data-provider="PetData" finished-at="2024-12-06T10:41:59 IST" duration-ms="1310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Animal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Lucky]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Black]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[pending]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewPetPostResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:41:59 IST" name="tearDown" finished-at="2024-12-06T10:41:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:41:59 IST" name="globalSetUP" finished-at="2024-12-06T10:41:59 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testAddNewPetPostResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:41:59 IST" name="testAddNewPetPostResponse" description="This test verifies the Add New Pet POST response and validates the data" data-provider="PetData" finished-at="2024-12-06T10:42:01 IST" duration-ms="1732" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Fish]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Goldy]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Golden]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[sold]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewPetPostResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:01 IST" name="tearDown" finished-at="2024-12-06T10:42:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:02 IST" name="globalSetUP" finished-at="2024-12-06T10:42:02 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testUpdateExistingPetPutResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:02 IST" name="testUpdateExistingPetPutResponse" description="This test verifies the Update Existing Pet PUT response and validates the updated data" data-provider="UpdatedPetData" finished-at="2024-12-06T10:42:03 IST" duration-ms="1295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bird555]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sona]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Red]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[available]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateExistingPetPutResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:03 IST" name="tearDown" finished-at="2024-12-06T10:42:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:03 IST" name="globalSetUP" finished-at="2024-12-06T10:42:03 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testUpdateExistingPetPutResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:03 IST" name="testUpdateExistingPetPutResponse" description="This test verifies the Update Existing Pet PUT response and validates the updated data" data-provider="UpdatedPetData" finished-at="2024-12-06T10:42:05 IST" duration-ms="1373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Animal555]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Lucky]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Black]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[pending]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateExistingPetPutResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:05 IST" name="tearDown" finished-at="2024-12-06T10:42:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:05 IST" name="globalSetUP" finished-at="2024-12-06T10:42:05 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testUpdateExistingPetPutResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:05 IST" name="testUpdateExistingPetPutResponse" description="This test verifies the Update Existing Pet PUT response and validates the updated data" data-provider="UpdatedPetData" finished-at="2024-12-06T10:42:06 IST" duration-ms="1621" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Fish555]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Goldy]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Golden]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[sold]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateExistingPetPutResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:06 IST" name="tearDown" finished-at="2024-12-06T10:42:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:06 IST" name="globalSetUP" finished-at="2024-12-06T10:42:06 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testFindPetByStatusGetResponse()[pri:3, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:06 IST" name="testFindPetByStatusGetResponse" description="This test verifies the Get Pet by Status response and checks for the presence of pet with name &#039;Lucky&#039; and status &#039;pending&#039;" finished-at="2024-12-06T10:42:08 IST" duration-ms="1358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetByStatusGetResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:08 IST" name="tearDown" finished-at="2024-12-06T10:42:08 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:08 IST" name="globalSetUP" finished-at="2024-12-06T10:42:08 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testFindPetByPetIDGetResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:08 IST" name="testFindPetByPetIDGetResponse" description="This test verifies the GET response for finding a pet by its ID." data-provider="PetData" finished-at="2024-12-06T10:42:11 IST" duration-ms="2761" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bird]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sona]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Red]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[available]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetByPetIDGetResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:11 IST" name="tearDown" finished-at="2024-12-06T10:42:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:11 IST" name="globalSetUP" finished-at="2024-12-06T10:42:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testFindPetByPetIDGetResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:11 IST" name="testFindPetByPetIDGetResponse" description="This test verifies the GET response for finding a pet by its ID." data-provider="PetData" finished-at="2024-12-06T10:42:13 IST" duration-ms="1818" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Animal]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Lucky]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Black]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[pending]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetByPetIDGetResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:13 IST" name="tearDown" finished-at="2024-12-06T10:42:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:13 IST" name="globalSetUP" finished-at="2024-12-06T10:42:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testFindPetByPetIDGetResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:13 IST" name="testFindPetByPetIDGetResponse" description="This test verifies the GET response for finding a pet by its ID." data-provider="PetData" finished-at="2024-12-06T10:42:14 IST" duration-ms="1388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Fish]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Goldy]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.facebook.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Golden]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[sold]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetByPetIDGetResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:14 IST" name="tearDown" finished-at="2024-12-06T10:42:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:14 IST" name="globalSetUP" finished-at="2024-12-06T10:42:14 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testUpdatePetPuTResponse()[pri:6, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:14 IST" name="testUpdatePetPuTResponse" description="This test verifies the POST response for updating an existing pet." finished-at="2024-12-06T10:42:17 IST" duration-ms="2940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePetPuTResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:17 IST" name="tearDown" finished-at="2024-12-06T10:42:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:17 IST" name="globalSetUP" finished-at="2024-12-06T10:42:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testUploadPetImagePostResponse()[pri:7, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:17 IST" name="testUploadPetImagePostResponse" description="This test verifies the POST response for uploading an image for an existing pet." finished-at="2024-12-06T10:42:20 IST" duration-ms="3026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUploadPetImagePostResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:20 IST" name="tearDown" finished-at="2024-12-06T10:42:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:20 IST" name="globalSetUP" finished-at="2024-12-06T10:42:20 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testDeletePetDeleteResponse()[pri:8, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:20 IST" name="testDeletePetDeleteResponse" description="This test verifies the DELETE response for removing a pet and checks the status after deletion." finished-at="2024-12-06T10:42:23 IST" duration-ms="2962" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletePetDeleteResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:23 IST" name="tearDown" finished-at="2024-12-06T10:42:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:23 IST" name="globalSetUP" finished-at="2024-12-06T10:42:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="deleberatlyFailTest()[pri:9, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:23 IST" name="deleberatlyFailTest" finished-at="2024-12-06T10:42:23 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at api.test.PetTest.deleberatlyFailTest(PetTest.java:575)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleberatlyFailTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:23 IST" name="tearDown" finished-at="2024-12-06T10:42:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="deleberatlySkippedTest1()[pri:10, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:23 IST" name="deleberatlySkippedTest1" finished-at="2024-12-06T10:42:23 IST" depends-on-methods="api.test.PetTest.deleberatlyFailTest" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method api.test.PetTest.deleberatlySkippedTest1() on instance api.test.PetTest@4c9f8c13 depends on not successfully finished methods 
[api.test.PetTest.deleberatlyFailTest() on instance api.test.PetTest@4c9f8c13]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method api.test.PetTest.deleberatlySkippedTest1() on instance api.test.PetTest@4c9f8c13 depends on not successfully finished methods 
[api.test.PetTest.deleberatlyFailTest() on instance api.test.PetTest@4c9f8c13]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:156)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleberatlySkippedTest1 -->
        <test-method signature="deleberatlySkippedTest2()[pri:11, instance:api.test.PetTest@4c9f8c13]" started-at="2024-12-06T10:42:23 IST" name="deleberatlySkippedTest2" finished-at="2024-12-06T10:42:23 IST" depends-on-methods="api.test.PetTest.deleberatlyFailTest" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method api.test.PetTest.deleberatlySkippedTest2() on instance api.test.PetTest@4c9f8c13 depends on not successfully finished methods 
[api.test.PetTest.deleberatlyFailTest() on instance api.test.PetTest@4c9f8c13]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method api.test.PetTest.deleberatlySkippedTest2() on instance api.test.PetTest@4c9f8c13 depends on not successfully finished methods 
[api.test.PetTest.deleberatlyFailTest() on instance api.test.PetTest@4c9f8c13]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:156)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleberatlySkippedTest2 -->
      </class> <!-- api.test.PetTest -->
      <class name="api.test.UserTest">
        <test-method is-config="true" signature="setUpData()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:33 IST" name="setUpData" finished-at="2024-12-06T10:42:33 IST" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpData -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:33 IST" name="globalSetUP" finished-at="2024-12-06T10:42:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="createUser_shouldReturn200StatusCode()[pri:1, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:33 IST" name="createUser_shouldReturn200StatusCode" description="This test verifies the Create User POST response status code" finished-at="2024-12-06T10:42:35 IST" duration-ms="1798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser_shouldReturn200StatusCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:35 IST" name="tearDown" finished-at="2024-12-06T10:42:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:35 IST" name="globalSetUP" finished-at="2024-12-06T10:42:35 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="getUser_shouldRespondWithinExpectedTime()[pri:2, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:35 IST" name="getUser_shouldRespondWithinExpectedTime" description="This test verifies that GET user response time is within the expected range" finished-at="2024-12-06T10:42:36 IST" duration-ms="1573" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Response time is outside the expected range. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Response time is outside the expected range. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at api.test.UserTest.getUser_shouldRespondWithinExpectedTime(UserTest.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUser_shouldRespondWithinExpectedTime -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:36 IST" name="tearDown" finished-at="2024-12-06T10:42:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:36 IST" name="globalSetUP" finished-at="2024-12-06T10:42:36 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="updateUser_shouldReturn200StatusCode()[pri:3, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:36 IST" name="updateUser_shouldReturn200StatusCode" description="This test verifies the successful update of a user and returns 200 status code" finished-at="2024-12-06T10:42:38 IST" duration-ms="1594" status="FAIL">
          <exception class="org.json.JSONException">
            <message>
              <![CDATA[JSONObject["id"] not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.json.JSONException: JSONObject["id"] not found.
at org.json.JSONObject.get(JSONObject.java:596)
at api.test.UserTest.updateUser_shouldReturn200StatusCode(UserTest.java:305)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.json.JSONException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser_shouldReturn200StatusCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:38 IST" name="tearDown" finished-at="2024-12-06T10:42:38 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:38 IST" name="globalSetUP" finished-at="2024-12-06T10:42:38 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="updateUser_withInvalidUsername_shouldHandleGracefully()[pri:4, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:38 IST" name="updateUser_withInvalidUsername_shouldHandleGracefully" description="This test verifies how the system handles an update request with an invalid username" finished-at="2024-12-06T10:42:39 IST" duration-ms="1277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser_withInvalidUsername_shouldHandleGracefully -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:39 IST" name="tearDown" finished-at="2024-12-06T10:42:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:39 IST" name="globalSetUP" finished-at="2024-12-06T10:42:39 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="loginUser_shouldReturn200StatusCode()[pri:5, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:39 IST" name="loginUser_shouldReturn200StatusCode" description="This test verifies that logging in a user returns a 200 status code" finished-at="2024-12-06T10:42:41 IST" duration-ms="1417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUser_shouldReturn200StatusCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:41 IST" name="tearDown" finished-at="2024-12-06T10:42:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:41 IST" name="globalSetUP" finished-at="2024-12-06T10:42:41 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="logoutUser_shouldReturn200StatusCode()[pri:6, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:41 IST" name="logoutUser_shouldReturn200StatusCode" description="This test verifies that the logout response returns a 200 status code" finished-at="2024-12-06T10:42:42 IST" duration-ms="1397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutUser_shouldReturn200StatusCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:42 IST" name="tearDown" finished-at="2024-12-06T10:42:42 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:42 IST" name="globalSetUP" finished-at="2024-12-06T10:42:42 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="deleteUser_shouldReturn200StatusCode()[pri:7, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:42 IST" name="deleteUser_shouldReturn200StatusCode" description="This test verifies that the DELETE request for a user returns a 200 status code" finished-at="2024-12-06T10:42:43 IST" duration-ms="1284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser_shouldReturn200StatusCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:43 IST" name="tearDown" finished-at="2024-12-06T10:42:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:43 IST" name="globalSetUP" finished-at="2024-12-06T10:42:43 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="deletedUser_shouldNotBeFetched_shouldReturn404Error()[pri:8, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:43 IST" name="deletedUser_shouldNotBeFetched_shouldReturn404Error" description="This test verifies that a deleted user cannot be fetched and returns a 404 error" finished-at="2024-12-06T10:42:45 IST" duration-ms="1325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletedUser_shouldNotBeFetched_shouldReturn404Error -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:45 IST" name="tearDown" finished-at="2024-12-06T10:42:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:45 IST" name="globalSetUP" finished-at="2024-12-06T10:42:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="createUsersInBulk_shouldReturn200StatusCode()[pri:38, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:45 IST" name="createUsersInBulk_shouldReturn200StatusCode" description="This test verifies that the bulk user creation returns a 200 status code" finished-at="2024-12-06T10:42:46 IST" duration-ms="1369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUsersInBulk_shouldReturn200StatusCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.UserTest@3c419631]" started-at="2024-12-06T10:42:46 IST" name="tearDown" finished-at="2024-12-06T10:42:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- api.test.UserTest -->
      <class name="api.test.StoreTest">
        <test-method is-config="true" signature="setUpData()[pri:0, instance:api.test.StoreTest@4a22f9e2]" started-at="2024-12-06T10:42:23 IST" name="setUpData" finished-at="2024-12-06T10:42:23 IST" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpData -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.StoreTest@4a22f9e2]" started-at="2024-12-06T10:42:23 IST" name="globalSetUP" finished-at="2024-12-06T10:42:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testPostStoreResponse()[pri:1, instance:api.test.StoreTest@4a22f9e2]" started-at="2024-12-06T10:42:23 IST" name="testPostStoreResponse" description="This test verifies the Post Store response for placing order of pet and validates the data" finished-at="2024-12-06T10:42:24 IST" duration-ms="1355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostStoreResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.StoreTest@4a22f9e2]" started-at="2024-12-06T10:42:24 IST" name="tearDown" finished-at="2024-12-06T10:42:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.StoreTest@4a22f9e2]" started-at="2024-12-06T10:42:24 IST" name="globalSetUP" finished-at="2024-12-06T10:42:24 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testGetStoreOrderResponse()[pri:2, instance:api.test.StoreTest@4a22f9e2]" started-at="2024-12-06T10:42:24 IST" name="testGetStoreOrderResponse" description="This test verifies the Get Store Order response for finding purchanse order by id and validates the data" finished-at="2024-12-06T10:42:28 IST" duration-ms="3420" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected status code is 404 for invalid order ID. expected [404] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected status code is 404 for invalid order ID. expected [404] but found [200]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at api.test.StoreTest.testGetStoreOrderResponse(StoreTest.java:212)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStoreOrderResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.StoreTest@4a22f9e2]" started-at="2024-12-06T10:42:28 IST" name="tearDown" finished-at="2024-12-06T10:42:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.StoreTest@4a22f9e2]" started-at="2024-12-06T10:42:28 IST" name="globalSetUP" finished-at="2024-12-06T10:42:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testGetStoreInventoriesResponse()[pri:3, instance:api.test.StoreTest@4a22f9e2]" started-at="2024-12-06T10:42:28 IST" name="testGetStoreInventoriesResponse" description="This test verifies the Get Store Inventories response returned by statuswise and validates the data" finished-at="2024-12-06T10:42:30 IST" duration-ms="1683" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: object instance has properties which are not allowed by the schema: ["05.12.2024","Avilable","The Best Dog of World","not available","pending"]
    level: "error"
    schema: {"loadingURI":"#","pointer":"/definitions/Welcome8"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "additionalProperties"
    unwanted: ["05.12.2024","Avilable","The Best Dog of World","not available","pending"]
error: object has missing required properties (["placed","ratvelleg","status"])
    level: "error"
    schema: {"loadingURI":"#","pointer":"/definitions/Welcome8"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "required"
    required: ["available","placed","ratvelleg","sold","status","string"]
    missing: ["placed","ratvelleg","status"]

  Actual: {"sold":18,"The Best Dog of World":1,"string":743,"pending":6,"available":216,"not available":1,"Avilable":1,"05.12.2024":1}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: object instance has properties which are not allowed by the schema: ["05.12.2024","Avilable","The Best Dog of World","not available","pending"]
    level: "error"
    schema: {"loadingURI":"#","pointer":"/definitions/Welcome8"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "additionalProperties"
    unwanted: ["05.12.2024","Avilable","The Best Dog of World","not available","pending"]
error: object has missing required properties (["placed","ratvelleg","status"])
    level: "error"
    schema: {"loadingURI":"#","pointer":"/definitions/Welcome8"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "required"
    required: ["available","placed","ratvelleg","sold","status","string"]
    missing: ["placed","ratvelleg","status"]

  Actual: {"sold":18,"The Best Dog of World":1,"string":743,"pending":6,"available":216,"not available":1,"Avilable":1,"05.12.2024":1}

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:107)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)
at api.test.StoreTest.testGetStoreInventoriesResponse(StoreTest.java:278)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStoreInventoriesResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.StoreTest@4a22f9e2]" started-at="2024-12-06T10:42:30 IST" name="tearDown" finished-at="2024-12-06T10:42:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="globalSetUP()[pri:0, instance:api.test.StoreTest@4a22f9e2]" started-at="2024-12-06T10:42:30 IST" name="globalSetUP" finished-at="2024-12-06T10:42:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUP -->
        <test-method signature="testDeleteStoreOrderResponse()[pri:4, instance:api.test.StoreTest@4a22f9e2]" started-at="2024-12-06T10:42:30 IST" name="testDeleteStoreOrderResponse" description="This test verifies the Delete Store Order DELETE response and validates the data" finished-at="2024-12-06T10:42:33 IST" duration-ms="3019" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected status code is 200. expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected status code is 200. expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at api.test.StoreTest.testDeleteStoreOrderResponse(StoreTest.java:365)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteStoreOrderResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:api.test.StoreTest@4a22f9e2]" started-at="2024-12-06T10:42:33 IST" name="tearDown" finished-at="2024-12-06T10:42:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- api.test.StoreTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
